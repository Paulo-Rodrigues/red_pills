---
title : "Self Encapsulate field"
tags: [ruby, refactoring]
date: 21-06-2019
layout: post
---

Existem duas formas de acesso a campos de uma classe. Acesso direto ou acesso indireto por meio de getters e setters.

O acesseo indireto permite que subclasses possam sobrescrever  como acessar esses campos, por exemplo. Por outro lado, acesso direto faz o código ser mais facilmente lido, retirando a necessidade de se pensar "Ok isso é um getter".

## Como funciona

* Crie um método getter ou setter para o campo

* Procure por todas as referências a esse campo e as substitua pelos getters e setters.

* Teste

## Exemplo

```ruby
  class Item
    def initialize(base_price, tax_rate)
      @base_price = base_price
      @tax_rate = tax_rate
    end

    def raise_base_price_by(percent)
      @base_price = @base_price * (1 + percent / 100)
    end

    def total
      @base_price * (1 + @tax_rate)
    end
  end

  class Item
    attr_accessor :base_price, :tax_rate

    def raise_base_price_by(percent)
      self.base_price = base_price * (1 + percent / 100)
    end

    def total
      base_price * (1 + tax_rate)
    end
  end
```

### Referencias
 FIELDS, Jay; HARVIE, Shane; FOWLER, Martin; BECK, Kent. Refactoring Ruby Edition. Boston: Addison-Wesley, 2009